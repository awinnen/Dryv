@using System.Web.Mvc
@using DryvDemo.Areas.Examples
@using DryvDemo.Areas.Examples.Controllers
@using DryvDemo.Areas.Examples.Models
@model DryvDemo.Areas.Examples.Models.Model3
@{
    var Options = DependencyResolver.Current.GetService<IOptions<Options3>>();
    Layout = null;
}

<div class="options">
    <form id="options3" action="@Url.Action(nameof(OptionsController.Example3), "Options")" onsubmit="return updateOptions(this, '#form3')" method="post">
        <div class="d-flex justify-content-between">
            <span>
                <input type="checkbox" id="CompanyNameRequired" name="CompanyNameRequired" checked="@Options<>.Value.CompanyNameRequired" value="true">
                <input name="CompanyNameRequired" type="hidden" value="false">
                <label for="CompanyNameRequired" class="form-check-label">Company name required</label>
            </span>
            <button class="btn btn-secondary btn-sm">Update options</button>
        </div>
    </form>
</div>

<div class="alert alert-info" role="alert">
    <form id="form3" action="@Url.Action(nameof(ExamplesController.Example3), "Examples")" onsubmit="return sendForm(this)" method="post">
        <div class="form-group row">
            @Html.LabelFor(m => m.Company, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Company, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Company)
            </div>
        </div>

        <button class="btn btn-primary">Send</button>
        <button type="button" class="btn btn-primary" onclick="return sendForm(this)">Send w/o client validation</button>
    </form>
</div>