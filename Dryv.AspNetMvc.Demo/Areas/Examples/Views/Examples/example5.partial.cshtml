@using DryvDemo.Areas.Examples.Controllers
@model DryvDemo.Areas.Examples.Models.Model5
@{
    Layout = null;
}
<div class="alert alert-info" role="alert">
    <form id="form4" action="@Url.Action(nameof(ExamplesController.Example5), "Examples")" onsubmit="return sendForm(this)" method="post">
        <div class="form-group row">
            @Html.LabelFor(m => m.Name, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.Child.Name, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Child.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Child.Name)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.Child.Child.Name, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Child.Child.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Child.Child.Name)
            </div>
        </div>

        <button class="btn btn-primary">Send</button>
        <button type="button" class="btn btn-primary" onclick="return sendForm(this)">Send w/o client validation</button>
    </form>
</div>